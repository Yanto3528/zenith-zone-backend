// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  email     String    @unique
  password  String
  avatarUrl String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      ROLE      @default(USER)
  addresses Address[]
}

model Address {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  lastName       String
  streetAddress  String
  streetAddress2 String?
  city           String
  country        String
  countryArea    String?
  postalCode     String
  isDefault      Boolean @default(false)
  user           User?   @relation(fields: [userId], references: [id])
  userId         String? @db.ObjectId
}

model Attribute {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  label           String
  code            String           @unique
  type            AttributeType    @default(DROPDOWN)
  isRequired      Boolean
  attributeValues AttributeValue[]
  metadata        Metadata[]
  isPublic        Boolean          @default(true)
  productType     ProductType[]    @relation(fields: [productTypeIds], references: [id])
  productTypeIds  String[]         @db.ObjectId
}

model ProductType {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  isShippable  Boolean
  metadata     Metadata[]
  attributes   Attribute[] @relation(fields: [attributeIds], references: [id])
  attributeIds String[]    @db.ObjectId
  Product      Product[]
}

model Product {
  id                 String              @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  description        String
  medias             Media[]
  metadata           Metadata[]
  productType        ProductType         @relation(fields: [productTypeId], references: [id])
  selectedAttributes SelectedAttribute[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  productTypeId      String              @db.ObjectId
}

type AttributeValue {
  code  String
  name  String
  value String?
}

type Metadata {
  code  String
  value String
}

type Media {
  url String
  alt String
}

type SelectedAttribute {
  attributeId String   @db.ObjectId
  value       String?
  values      String[]
}

enum ROLE {
  ADMIN
  USER
}

enum AttributeType {
  DROPDOWN
  MULTI_SELECT
  TEXT
  RICH_TEXT
  SWATCH
}
